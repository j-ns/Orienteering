buildscript {
    repositories {
        jcenter()
        flatDir { dirs 'F:/Repositories/Plugins' }
        mavenLocal()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.0.8'
        classpath 'com.jns.gradle:Templates-Plugin:1.0.0-all'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2'
    }
}
plugins { id "org.sonarqube" version "1.2" 
    id "com.github.hierynomus.license" version "0.13.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.javafxports.jfxmobile'
apply plugin: 'project-templates'
apply plugin: 'project-report'
apply plugin: 'org.sonarqube'


mainClassName = 'com.jns.orienteering.OrienteeringApp'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://nexus.gluonhq.com/nexus/content/repositories/releases' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    //          maven {url'http://nexus.gluonhq.com/nexus/content/repositories/releases/com/gluonhq/charm-glisten/3.0.0/' }
    
}

ext.GLUON_VERSION = "3.0.0"
dependencies {

    /***************** GLUON ***********************/
    compile 'com.airhacks:afterburner.mfx:1.6.2'

    compile ("com.gluonhq:charm:$GLUON_VERSION")
    //    {
    //         exclude group: 'com.gluonhq',
    //         module: 'connect'
    //    }
    //        compile 'com.gluonhq:connect:1.0.2-SNAPSHOT'
//    compile 'com.gluonhq:connect:1.0.1'

    androidRuntime "com.gluonhq:charm-android:$GLUON_VERSION"
    iosRuntime "com.gluonhq:charm-ios:$GLUON_VERSION"
    desktopRuntime "com.gluonhq:charm-desktop:$GLUON_VERSION"

    compile "org.javafxports:jfxdvk:8.60.6"


    /***************** ORMLITE ***********************/
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'

    compile 'com.j256.ormlite:ormlite-jdbc:4.48'
    desktopCompile "org.xerial:sqlite-jdbc:3.8.11.2"
    desktopCompile 'org.xerial.thirdparty:nestedvm:1.0'


    /***************** LOGGING ***********************/
    compile 'org.slf4j:slf4j-api:1.7.21'
    desktopCompile 'ch.qos.logback:logback-classic:1.1.7'
    androidRuntime 'com.noveogroup.android:android-logger:1.3.5'


    /***************** DIVERSE ***********************/
    //    compile 'eu.hansolo:Medusa:5.2' /* invokeDynamic */
    compile 'de.jensd:fontawesomefx:8.8' /*8.9 verwendet invokeDynamic*/
    //    compile 'org.joda:joda-money:0.11'
    //    compile 'net.sf.supercsv:super-csv:2.4.0'

    compile files('libs/jfoenix-0.0.0-SNAPSHOT-retrolambda.jar',
            'libs/maps-1.0.1-SNAPSHOT.jar'
            )

    androidRuntime 'com.google.zxing:core:3.2.1'

    //    compile 'org.apache.httpcomponents.client5:httpclient5:5.0-alpha1'
    //    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    //    compile 'com.google.api-client:google-api-client:1.20.0'
    //    compile 'com.google.oauth-client:google-oauth-client:1.22.0'
    //    compile 'com.google.oauth-client:google-oauth-client-java6:1.22.0'
    //    compile 'com.google.apis:google-api-services-oauth2:v2-rev117-1.22.0'

    //    compile 'com.google.cloud:google-cloud:0.3.0'
    compile ('com.google.cloud:google-cloud-storage:0.3.0') {
        exclude group: 'javax.inject', module: 'javax.inject'
    }

    //    compile 'com.twelvemonkeys:twelvemonkeys:3.2.1'
    compile 'com.twelvemonkeys.common:common-io:3.2.1'
    compile 'com.twelvemonkeys.common:common-image:3.2.1'
    compile 'com.twelvemonkeys.common:common-lang:3.2.1'
    compile 'com.twelvemonkeys.imageio:imageio-core:3.2.1'
    compile 'com.twelvemonkeys.imageio:imageio-metadata:3.2.1'
    compile 'com.twelvemonkeys.imageio:imageio-jpeg:3.2.1'

    /***************** TESTS ************************/
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.4.1'
    testCompile 'ch.qos.logback:logback-classic:1.1.7'
}


jfxmobile {
    javafxportsVersion = '8.60.6'
    android {
        packagingOptions {
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/INDEX.LIST'
            exclude 'META-INF/services/io.grpc.ManagedChannelProvider'
            exclude 'META-INF/io.netty.versions.properties'
            exclude 'META-INF/DEPENDENCIES'
        }
        manifest = 'src/android/AndroidManifest.xml'
        compileSdkVersion = '23'
    }
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

retrolambda {
    oldJdk System.getenv("JAVA7_HOME")
    jdk System.getenv("JAVA_HOME") //wird für sonarQube tests benötigt.
}

def libraries = "${System.properties['java.home']}/lib/ext/jfxrt.jar,F:/AndroidSDK/platforms/android-23/android.jar,/libs/*.jar,${configurations.runtime.join(",")}"
 
 sonarqube{
     properties {
         property "sonar.sourceEncoding", "UTF-8"
         property "sonar.sources", "src/main/java, src/android/java, src/desktop/java, src/main/resources"
         property "sonar.binaries", "bin"
         property "sonar.libraries", libraries
 
         property "sonar.java.binaries","bin"
         property "sonar.java.libraries", libraries
 
         property "sonar.tests", "src/test/java"
         property "sonar.java.test.binaries", "bin"
         property "sonar.java.test.libraries", libraries
     }
 }

projectTemplates {
    packageName ="com.jns.orienteering"
    mainClassName ="OrienteeringApp"
    modelClasses = [
        'Mission',
        'Task',
        'Location',
        'Team',
        'Person',
        'Stats',
        'MissionStats',
        'TaskStats'
    ]
}

viewTemplates {
    viewNames = [
        'Start',
        'Home',
        'Missions',
        'Mission',
        'Tasks',
        'Task',
        'ActiveMission',
        'Report',
        'User',
        'Account',
        'City',
        'Cities'
    ]
}

license {
    header rootProject.file('LICENSE')
    skipExistingHeaders true
      includes(["**/*.java", "**/*.fxml"])
}


tasks.withType(Test).each { task ->
    task.enabled = false
}

//apply plugin: 'com.google.gms.google-services'